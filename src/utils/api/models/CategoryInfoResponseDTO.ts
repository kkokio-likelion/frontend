/* tslint:disable */
/* eslint-disable */
/**
 * Kkokio API
 * <h3>JWT 토큰 구조</h3> <ul>     <li>subject: accountId</li>     <li>issuedAt: 발급 시간</li>     <li>expiration: 만료 시간</li>     <li>claims:</li>     <ol>         <li>username: 보여지는 이름</li>         <li>roles: 권한들</li>     </ol> </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StoreInfoResponseDTO } from './StoreInfoResponseDTO';
import {
    StoreInfoResponseDTOFromJSON,
    StoreInfoResponseDTOFromJSONTyped,
    StoreInfoResponseDTOToJSON,
} from './StoreInfoResponseDTO';

/**
 * 카테고리 요청에 대한 응답 정보를 담고 있는 DTO
 * @export
 * @interface CategoryInfoResponseDTO
 */
export interface CategoryInfoResponseDTO {
    /**
     * 생성 시간 정보
     * @type {Date}
     * @memberof CategoryInfoResponseDTO
     */
    createdAt?: Date;
    /**
     * 마지막 수정 시간 정보
     * @type {Date}
     * @memberof CategoryInfoResponseDTO
     */
    updatedAt?: Date;
    /**
     * 삭제 시간 정보
     * @type {Date}
     * @memberof CategoryInfoResponseDTO
     */
    deletedAt?: Date;
    /**
     * 카테고리 ID값
     * @type {number}
     * @memberof CategoryInfoResponseDTO
     */
    categoryId?: number;
    /**
     * 카테고리 이름
     * @type {string}
     * @memberof CategoryInfoResponseDTO
     */
    categoryName?: string;
    /**
     * 
     * @type {StoreInfoResponseDTO}
     * @memberof CategoryInfoResponseDTO
     */
    storeInfoResponseDTO?: StoreInfoResponseDTO;
}

/**
 * Check if a given object implements the CategoryInfoResponseDTO interface.
 */
export function instanceOfCategoryInfoResponseDTO(value: object): value is CategoryInfoResponseDTO {
    return true;
}

export function CategoryInfoResponseDTOFromJSON(json: any): CategoryInfoResponseDTO {
    return CategoryInfoResponseDTOFromJSONTyped(json, false);
}

export function CategoryInfoResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryInfoResponseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'categoryName': json['categoryName'] == null ? undefined : json['categoryName'],
        'storeInfoResponseDTO': json['storeInfoResponseDTO'] == null ? undefined : StoreInfoResponseDTOFromJSON(json['storeInfoResponseDTO']),
    };
}

export function CategoryInfoResponseDTOToJSON(value?: CategoryInfoResponseDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
        'categoryId': value['categoryId'],
        'categoryName': value['categoryName'],
        'storeInfoResponseDTO': StoreInfoResponseDTOToJSON(value['storeInfoResponseDTO']),
    };
}

