/* tslint:disable */
/* eslint-disable */
/**
 * Kkokio API
 * <h3>JWT 토큰 구조</h3> <ul>     <li>subject: accountId</li>     <li>issuedAt: 발급 시간</li>     <li>expiration: 만료 시간</li>     <li>claims:</li>     <ol>         <li>username: 보여지는 이름</li>         <li>roles: 권한들</li>     </ol> </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 회원가입 요청 DTO
 * @export
 * @interface AccountRegisterDto
 */
export interface AccountRegisterDto {
    /**
     * 로그인 ID
     * @type {string}
     * @memberof AccountRegisterDto
     */
    loginId: string;
    /**
     * 로그인 비밀번호
     * @type {string}
     * @memberof AccountRegisterDto
     */
    loginPassword: string;
    /**
     * 사용자 이름
     * @type {string}
     * @memberof AccountRegisterDto
     */
    name: string;
}

/**
 * Check if a given object implements the AccountRegisterDto interface.
 */
export function instanceOfAccountRegisterDto(value: object): value is AccountRegisterDto {
    if (!('loginId' in value) || value['loginId'] === undefined) return false;
    if (!('loginPassword' in value) || value['loginPassword'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function AccountRegisterDtoFromJSON(json: any): AccountRegisterDto {
    return AccountRegisterDtoFromJSONTyped(json, false);
}

export function AccountRegisterDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountRegisterDto {
    if (json == null) {
        return json;
    }
    return {
        
        'loginId': json['loginId'],
        'loginPassword': json['loginPassword'],
        'name': json['name'],
    };
}

export function AccountRegisterDtoToJSON(value?: AccountRegisterDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'loginId': value['loginId'],
        'loginPassword': value['loginPassword'],
        'name': value['name'],
    };
}

