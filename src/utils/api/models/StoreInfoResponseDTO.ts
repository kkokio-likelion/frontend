/* tslint:disable */
/* eslint-disable */
/**
 * Kkokio API
 * <h3>JWT 토큰 구조</h3> <ul>     <li>subject: accountId</li>     <li>issuedAt: 발급 시간</li>     <li>expiration: 만료 시간</li>     <li>claims:</li>     <ol>         <li>username: 보여지는 이름</li>         <li>roles: 권한들</li>     </ol> </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 가게 요청에 대한 응답 정보
 * @export
 * @interface StoreInfoResponseDTO
 */
export interface StoreInfoResponseDTO {
    /**
     * 생성 시간 정보
     * @type {Date}
     * @memberof StoreInfoResponseDTO
     */
    createdAt?: Date;
    /**
     * 마지막 수정 시간 정보
     * @type {Date}
     * @memberof StoreInfoResponseDTO
     */
    updatedAt?: Date;
    /**
     * 삭제 시간 정보
     * @type {Date}
     * @memberof StoreInfoResponseDTO
     */
    deletedAt?: Date;
    /**
     * 가게 ID값
     * @type {number}
     * @memberof StoreInfoResponseDTO
     */
    storeId?: number;
    /**
     * 가게 이름
     * @type {string}
     * @memberof StoreInfoResponseDTO
     */
    storeName?: string;
    /**
     * 가게 주소
     * @type {string}
     * @memberof StoreInfoResponseDTO
     */
    storeAddress?: string;
    /**
     * 가게 소개글
     * @type {string}
     * @memberof StoreInfoResponseDTO
     */
    storeSummary?: string;
    /**
     * 가게 대표 이미지 url
     * @type {string}
     * @memberof StoreInfoResponseDTO
     */
    profileImgUrl?: string;
}

/**
 * Check if a given object implements the StoreInfoResponseDTO interface.
 */
export function instanceOfStoreInfoResponseDTO(value: object): value is StoreInfoResponseDTO {
    return true;
}

export function StoreInfoResponseDTOFromJSON(json: any): StoreInfoResponseDTO {
    return StoreInfoResponseDTOFromJSONTyped(json, false);
}

export function StoreInfoResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreInfoResponseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'storeId': json['storeId'] == null ? undefined : json['storeId'],
        'storeName': json['storeName'] == null ? undefined : json['storeName'],
        'storeAddress': json['storeAddress'] == null ? undefined : json['storeAddress'],
        'storeSummary': json['storeSummary'] == null ? undefined : json['storeSummary'],
        'profileImgUrl': json['profile_img_url'] == null ? undefined : json['profile_img_url'],
    };
}

export function StoreInfoResponseDTOToJSON(value?: StoreInfoResponseDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
        'storeId': value['storeId'],
        'storeName': value['storeName'],
        'storeAddress': value['storeAddress'],
        'storeSummary': value['storeSummary'],
        'profile_img_url': value['profileImgUrl'],
    };
}

